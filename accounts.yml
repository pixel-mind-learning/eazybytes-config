server:
  port: 8080

build:
  version: "3.0"

accounts:
  message: "Welcome to EazyBank accounts related local APIs 2025 "
  contactDetails:
    name: "John Doe - Developer"
    email: "john@eazybank.com"
  onCallSupport:
    - (555) 555-1234
    - (555) 523-1345

spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  # enabled circuit breaker with open feign client
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    liveness-state:
      enabled: true
    readiness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

info:
  app:
    name:
    description: "Eazy Bank Accounts Application"
    version: "1.0.0"

logging:
  level:
    com:
      eazybytes:
        accounts: DEBUG

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "http://localhost:8070/eureka/"
  instance:
    prefer-ip-address: true

# Circuit breaker pattern configuration
resilience4j.circuitbreaker:
  configs:
    default:
      # This defines the number of calls in the sliding window that will be used to calculate the failure rate.
      # In this case, it's 10, so the CircuitBreaker will track the last 10 calls.
      # These calls can be successful or failed, and their outcome determines whether to open the circuit.
      slidingWindowSize: 5
      # This sets the time the circuit will stay open before transitioning to half-open, in milliseconds.
      # Here, 10000 milliseconds = 10 seconds.
      # After this time, the circuit will attempt trial calls as specified by
      waitDurationInOpenState: 10s
      # This defines how many trial calls are allowed when the circuit breaker is in a half-open state.
      # Here, 2 means that when transitioning from open to half-open, it will allow 2 calls.
      # If those calls succeed, the circuit goes to closed; if they fail, it goes back to open.
      permittedNumberOfCallsInHalfOpenState: 2
      # This sets the failure rate threshold as a percentage.
      # If more than 50% of the calls in the sliding window fail, the circuit will open.
      # For example, if 6 out of the last 10 calls fail, the failure rate is 60%, which is above the threshold.
      failureRateThreshold: 50
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 10s

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      # when you defining retry exception, no need to define ignore exception
      # can handle them directly in gateway service as well
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException